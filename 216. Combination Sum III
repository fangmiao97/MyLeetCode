class Solution {
    public List<List<Integer>> combinationSum3(int k, int n) {
        if(k > 10 || n > 50)
            return new ArrayList<>();
        List<List<Integer>> res = new ArrayList<>();
        backtrack(res, new ArrayList<>(), 0, n, k);
        return res;
    }
    
    void backtrack(List<List<Integer>> res, List<Integer> temp, int num, int remain, int size) {
        if(remain < 0)
            return;
        else if(remain == 0 && temp.size() == size)
            res.add(new ArrayList<>(temp));
        else {
            for(int i = num + 1; i <= 9; i++) {
                temp.add(i);
                backtrack(res, temp, i, remain - i, size);
                temp.remove(temp.size() - 1);
            }
        }
    }
}
