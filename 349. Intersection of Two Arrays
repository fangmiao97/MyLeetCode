class Solution {
    public int[] intersection(int[] nums1, int[] nums2) {
        HashSet<Integer> set1 = new HashSet<>();
        for(Integer i : nums1)
            set1.add(i);
        HashSet<Integer> set2 = new HashSet<>();
        for(Integer i : nums2)
            set2.add(i);
        
        set1.retainAll(set2);
        
        int[] output = new int[set1.size()];
        int idx = 0;
        for(int s : set1)
            output[idx++] = s;
        return output;
    }
}

class Solution {
    public int[] intersection(int[] nums1, int[] nums2) {
        Set<Integer> res = new HashSet<Integer>();
        Arrays.sort(nums1);
        Arrays.sort(nums2);
        
        int i = 0, j = 0;
        while(i < nums1.length && j < nums2.length) {
            if(nums1[i] < nums2[j]) {
                i++;
            }else if(nums2[j] < nums1[i]) {
                j++;
            }else{
                res.add(nums1[i]);
                i++;
                j++;
            }
        }
        
        int[] result = new int[res.size()];
        int index = 0;
        for(int num : res)
            result[index++] = num;
        return result;
    }
}

class Solution {
    public int[] intersection(int[] nums1, int[] nums2) {
        Set<Integer> res = new HashSet<Integer>();
        Arrays.sort(nums2);
        
        for(int i : nums1) {
            if(BinarySearch(nums2, i))
                res.add(i);
        }
        
        int index = 0;
        int[] result = new int[res.size()];
        for(int num : res)
            result[index++] = num;
        return result;
    }
    
    public boolean BinarySearch(int[] nums, int num) {
        int l = 0;
        int r = nums.length - 1;
        
        
        while(l <= r) {
            int mid = l + (r - l) / 2;
            if(nums[mid] < num)
                l = mid + 1;
            else if(nums[mid] > num)
                r = mid - 1;
            else
                return true;
        }
        
        return false;
    }
}


object Solution {
    def intersection(nums1: Array[Int], nums2: Array[Int]): Array[Int] = {
        (nums1 intersect nums2).distinct
    }
}
