class Solution {
    public String countAndSay(int n) {
        StringBuilder curr = new StringBuilder("1");
        StringBuilder prev;
        int count;
        char say;
        
        for(int i = 1; i < n; i++) {
            prev = curr;
            curr = new StringBuilder();
            count = 1;
            say = prev.charAt(0);
            
            for(int j = 1, length = prev.length(); j < length; j++) {
                if(prev.charAt(j) != say) {
                    curr.append(count).append(say);
                    count = 1;
                    say = prev.charAt(j);
                }else
                    count++;
            }
            curr.append(count).append(say);
        }
        
        return curr.toString();
    }
}

class Solution {
    public String countAndSay(int n) {
        
        if(n == 1) return "1";
        
        StringBuilder ans = new StringBuilder();
        
        String prev = countAndSay(n - 1);
        
        char c;
        int count =  0;
        for(int i = 0; i < prev.length(); i++) {
            c = prev.charAt(i);
            count = 1;
            while((i + 1) < prev.length() && prev.charAt(i + 1) == c ){
                count++;
                i++;
            }
            ans.append(count + "" + c);
        }
        
        return ans.toString();
    }
}
