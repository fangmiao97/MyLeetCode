//滑动窗口slide window
class Solution {
    public int lengthOfLongestSubstring(String s) {
        int ans = 1;

        if (s.length() == 1){
            return ans = 1;
        }else if (s.length() == 0){
            return ans = 0;
        }

        char[] chars = s.toCharArray();

        int tmp = 0;
        Map<Character, Integer> inChars = new HashMap<>();
        inChars.put(chars[0], 0);

        for (int i = 0, j = 1; j < chars.length; j++){

            if (!inChars.containsKey(chars[j])){
                inChars.put(chars[j], j);
                tmp = j - i + 1;
                ans = tmp > ans ? tmp : ans;
                continue;
            }else {
                int o = i;
                i = inChars.get(chars[j]) + 1;
                for (int n = o ; n < i; n++)
                    inChars.remove(chars[n]);
                inChars.put(chars[i], i);
                inChars.put(chars[j], j);
                tmp = j - i + 1;
                continue;
            }
        }

        return ans;
    }
}
