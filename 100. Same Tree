/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public boolean isSameTree(TreeNode p, TreeNode q) {
        //BFS，每个节点都要判断，出现不一样则返回false，所有都比较完则返回true
        
        if(p == null && q == null) return true;
        else if((p == null && q != null) || (q == null && p != null)) return false;
        
        Queue<TreeNode> a = new LinkedList<>();
        Queue<TreeNode> b = new LinkedList<>();

        a.offer(p);
        b.offer(q);

        while (!a.isEmpty() || !b.isEmpty()){

            if (a.size() != b.size()) return false;

            for (int sz = a.size(); sz > 0; --sz) {
                TreeNode n = a.poll();
                TreeNode m = b.poll();
                
                if(n == null && m == null) continue;
                else if(n == null ^ m == null) return false;

                if (n.val != m.val) return false;

                a.offer(n.left);
                a.offer(n.right);

                b.offer(m.left);
                b.offer(m.right);

            }

        }
        
        return true;
    }
}
