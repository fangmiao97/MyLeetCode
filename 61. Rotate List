/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        if(head == null)
            return null;
        
        ListNode dummy = new ListNode(0);
        dummy.next = head;
        int length = 0;
        while(head != null) {
            length++;
            head = head.next;
        }
        
        k %= length;
        ListNode f = new ListNode(0);
        f = dummy.next;
        while(k > 0) {
            f = f.next;
            k--;
        }
        
        ListNode r = new ListNode(0);
        r = dummy.next;
        while(f != null && f.next != null) {
            r = r.next;
            f = f.next;
        }
        f.next = dummy.next;
        dummy.next = r.next;
        r.next = null;
        
        return dummy.next;
    }
}

public ListNode rotateRight(ListNode head, int k) {
    if(head == null || k == 0) {
        return head;
    }
    ListNode p = head;
    int len = 1;
    while(p.next != null) {
        p = p.next;
        len++;
    }
    p.next = head;
    k %= len;
    for(int i = 0; i < len - k; i++) {
        p = p.next;
    }
    head = p.next;
    p.next = null;
    return head;
}
