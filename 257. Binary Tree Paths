class Solution {
    public List<String> binaryTreePaths(TreeNode root) {
        List<String> res = new ArrayList<>();
        //dfs(res, "", root);
        helper(res, new StringBuilder(), root);
        return res;
    }
    
    public void dfs(List<String> res, String temp, TreeNode root) {
        if(root == null)
            return;
        
        if(root.left == null && root.right == null) {
            res.add(temp + root.val);
        }
        dfs(res, temp+root.val+"->", root.left);
        dfs(res, temp+root.val+"->", root.right);
    }
    
    public void helper(List<String> res, StringBuilder temp, TreeNode root) {
        if(root == null)
            return;
        
        int len = temp.length();
        temp.append(root.val);
        if(root.left == null && root.right == null) {
            res.add(temp.toString());
        }
        temp.append("->");
        helper(res, temp, root.left);
        helper(res, temp, root.right);
        temp.setLength(len);
    }
}
