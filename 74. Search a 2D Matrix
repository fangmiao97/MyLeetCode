class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        if(matrix.length == 0 || matrix[0].length == 0)
            return false;
        
        int r = matrix.length, c = matrix[0].length;
        if(target < matrix[0][0] || target > matrix[r - 1][c - 1])
            return false;
        
        int tr = 0;
        boolean change = false;
        while(tr < r && target >= matrix[tr][0]) {
            tr++;
            change = true;
        }
        if(change)
            tr--;
        
        for(int i = 0; i < c; i++) {
            if(matrix[tr][i] == target)
                return true;
        }
        return false;
        
    }
}

class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        if(matrix == null || matrix.length == 0)
            return false;
        
        int r = matrix.length, c = matrix[0].length;
        int left = 0, right = r * c - 1;
        while(left <= right){
            int mid = (left + right) / 2;
            if(matrix[mid / c][mid % c] == target)
                return true;
            if(matrix[mid / c][mid % c] < target)
                left = mid + 1;
            else
                right = mid - 1;
        }
        
        return false;
    }
}
