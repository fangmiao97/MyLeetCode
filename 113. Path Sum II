/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<List<Integer>> pathSum(TreeNode root, int sum) {
        if(root == null)
            return new ArrayList<>();
        
        List<List<Integer>> res = new ArrayList<>();
        List<Integer> temp = new ArrayList<>();
        temp.add(root.val);
        dfs(res, temp, root, sum);
        return res;
    }
    
    public void dfs(List<List<Integer>> res, List<Integer> temp, TreeNode root, int sum) {
        if(root.left == null && root.right == null
          && sum - root.val == 0) {
            res.add(new ArrayList(temp));
            return;
        }
        
        if(root.left == null && root.right == null)
            return;
        
        if(root.left != null) {
            temp.add(root.left.val);
            dfs(res, temp, root.left, sum - root.val);
            temp.remove(temp.size() - 1);
        }
        
        if(root.right != null) {
            temp.add(root.right.val);
            dfs(res, temp, root.right, sum - root.val);
            temp.remove(temp.size() - 1);
        }
    }
}
